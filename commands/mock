#!/usr/bin/env perl 

# This wrapper is started in a directory and should do some annotation.
# It should use a Perl implementation and start VEP within that directory,
# with all the right parameters. As this platform works entirely by convention
# here are the files we expect. 
#
# This is not running in the same process as the main application, so we can't
# directly access configuration values. If we need them, we'd need to process
# them for ourselves. 

use strict;
use warnings;

use POSIX qw(ctime);

use File::Spec;

my $curdir = File::Spec->curdir();
my $input = File::Spec->rel2abs('input', $curdir);
my $output = File::Spec->rel2abs('output', $curdir);

# A proper test should echo back a file. So we need a file to echo back.

open(my $fh, "<", $input) or die("Can't open $input: $!");
open(my $outfh, ">", $output) or die("Can't open $output: $!");
while(my $line = <$fh>) {
	chomp($line);
	print $outfh "ECHO: $line\n"; 
}
close($outfh);
close($fh);

foreach my $i (1..1) {
	my $time = ctime(time());
	chomp($time);
	print STDOUT "STDOUT: $time: Count: $i\n";
	print STDERR "STDERR: $time: Count: $i\n";
	sleep(10);
}

print STDOUT "STDOUT: Done\n";
print STDERR "STDERR: Done\n";

exit(0);
